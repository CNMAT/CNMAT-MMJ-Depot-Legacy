max v2;#N vpatcher 3 41 518 437;#P comment 153 41 335 196617 This patch demonstrates the principle of sampling a signal. The phasor~ at the left inlet functions as a clock which samples the signal at the right inlet \, another phasor~ in this case \, at regular intervals. The resulting output of samphold~ serves as the frequency control of an oscillator.;#P comment 152 321 78 196617 Scale amplitude;#P newex 117 296 45 196617 sig~ 0.1;#P newex 100 353 29 196617 dac~;#P newex 100 320 27 196617 *~;#P newex 50 305 31 196617 r dac;#P newex 100 261 35 196617 osc1~;#P newex 100 237 27 196617 *~;#P newex 117 211 48 196617 sig~ 440;#P newex 100 183 69 196617 samphold~;#P newex 159 116 36 196617 sig~ 4;#P flonum 159 96 56 9 0 0 0 3;#P newex 159 146 44 196617 phasor~;#P message 279 114 17 196617 0;#P flonum 100 96 56 9 0 0 0 3;#P newex 100 146 44 196617 phasor~;#P newex 100 116 45 196617 sig~ 4.5;#P comment 298 102 119 196617 Click on the 0 message to restart both phasors synchronously.;#P comment 5 14 378 196622 TUTORIAL 13 - A classic sample and hold algorithm;#P message 12 52 49 196617 \; dac start;#P message 63 52 45 196617 \; dac stop;#P comment 12 39 26 196617 On;#P comment 63 39 30 196617 Off;#P connect 20 0 18 1;#P connect 18 0 19 0;#P connect 18 0 19 1;#P connect 17 0 19 0;#P connect 16 0 18 0;#P connect 15 0 16 0;#P connect 14 0 15 1;#P connect 13 0 15 0;#P connect 12 0 10 0;#P connect 11 0 12 0;#P connect 10 0 13 1;#P connect 9 0 7 0;#P connect 9 0 10 0;#P connect 8 0 6 0;#P connect 7 0 13 0;#P connect 6 0 7 0;#P pop;