max v2;#N vpatcher 6 41 640 477;#P comment 140 257 199 196617 Receive example parameters for pt~ here.;#P comment 403 272 44 196617 Clarinet;#P comment 403 209 30 196617 Flute;#P comment 403 143 33 196617 Violin;#P comment 13 355 143 196617 Outputs at each new MIDI note;#P comment 221 373 181 196617 Oscillator used to confirm pt~ results.;#P comment 215 275 171 196617 Turn on toggle for sine wave output.;#P comment 300 106 135 196617 Turn on toggle for adc input.;#P comment 151 104 135 196617 Turn on toggle for osc input.;#P comment 59 104 95 196617 Input osc frequency;#P comment 3 245 90 196617 Metro sends bangs every 100 ms to track continuous pitch changes. (values appear at pt~'s right outlet).;#P comment 143 45 348 196617 The pitch tracker object \, pt~ \, takes a signal at its input and gives an estimate of the perceived pitch at its output (MIDI from the left \, continuous frequency from the right). Its two arguments are the FFT window size \, often 512 \, and the number of sample points between each FFT window.;#P newex 278 320 32 196617 / 15.;#P number 98 338 45 9 0 0 0 3;#P flonum 325 149 51 9 0 0 0 3;#P toggle 325 121 24 0;#P newex 288 149 29 196617 +~;#P newex 288 126 29 196617 adc~;#P newex 172 149 32 196617 / 10.;#P flonum 172 170 36 9 0 0 0 3;#P toggle 278 291 24 0;#P flonum 278 341 30 9 0 0 0 3;#N vpatcher 163 52 389 272;#P inlet 99 29 15 0;#P newex 99 78 61 196617 pack 0. 100;#P newex 99 109 30 196617 line~;#P outlet 27 168 15 0;#P newex 27 139 82 196617 *~;#P inlet 27 29 15 0;#P newex 27 57 39 196617 sig~ 0.;#P newex 27 80 35 196617 osc1~;#P connect 7 0 6 0;#P connect 3 0 4 0;#P connect 1 0 0 0;#P connect 0 0 3 0;#P connect 0 0 5 0;#P connect 2 0 1 0;#P connect 6 0 5 0;#P connect 5 0 3 1;#P pop;#P newobj 153 370 65 196617 patcher osc1;#P newex 98 287 65 196617 pt~ 512 256;#P flonum 153 338 94 9 0 0 0 3;#P newex 98 221 200 196617 +~;#N vpatcher 192 90 389 298;#P inlet 94 33 15 0;#P newex 94 81 61 196617 pack 0. 100;#P newex 94 104 30 196617 line~;#P newex 33 75 35 196617 osc1~;#P newex 33 53 39 196617 sig~ 0.;#P inlet 33 33 15 0;#P outlet 33 156 15 0;#P newex 33 127 71 196617 *~;#P connect 6 0 5 0;#P connect 5 0 0 1;#P connect 3 0 4 0;#P connect 0 0 1 0;#P connect 7 0 6 0;#P connect 2 0 3 0;#P connect 4 0 0 0;#P connect 4 0 5 0;#P pop;#P newobj 98 194 84 196617 patcher osc1;#P newex 288 194 47 196617 *~;#P newex 35 221 55 196617 metro 100;#P newex 35 173 55 196617 r tick-tock;#P toggle 35 201 15 0;#P newex 325 170 39 196617 sig~ 0.;#P newex 111 257 25 196617 r pt;#P toggle 172 121 24 0;#P newex 153 398 29 196617 dac~;#P comment 165 300 101 196617 Continuous output in Hz (send bang to pt~ for a new value).;#P comment 65 37 22 196617 Off;#P comment 1 37 19 196617 On;#P message 403 367 42 196617 \; pt print;#P comment 403 342 253 196617 A "print" message to the pt~ object tells it to print out its current parameter settings to the MAX window;#P message 403 220 284 196617 \; pt coefs 1 0.4 0.6 0.6 0.6 0.6 0.6 0.6 \, quality-range 0.3 0.6 \, amp-range 0.0003 0.003 \, pitch-range 59 100 \, gliss-time 80 \, stick 0.3 \, reattack 3 150 \, debounce-time 150;#P message 403 285 284 196617 \; pt coefs 1 0.7 0.7 0.7 0.7 0.6 0.6 0.6 \, quality-range 0.3 0.6 \, amp-range 0.0001 0.001 \, pitch-range 50 100 \, gliss-time 50 \, stick 0.1 \, reattack 3 150 \, debounce-time 150;#P comment 403 126 125 196617 Some example parameters;#P message 403 156 284 196617 \; pt coefs 1 0.4 0.6 0.6 0.6 0.6 0.6 0.6 \, quality-range 0.3 0.6 \, amp-range 0.0003 0.003 \, pitch-range 54 100 \, gliss-time 80 \, stick 0.3 \, reattack 3 150 \, debounce-time 150;#P message 65 51 62 196617 \; tick-tock 0 \; dac stop;#P flonum 98 170 58 9 0 0 0 3;#P comment 0 13 407 196622 TUTORIAL 17 - Tracking the pitch of an incoming signal;#P newex 113 366 31 196617 r dac;#P newex 98 126 35 196617 r freq;#P message 1 51 62 196617 \; tick-tock 1 \; dac start \; freq 440;#N vpatcher 4 51 436 473;#P comment 6 261 328 196617 coeffs: (hoped you wouldn't ask....) If amp[i] is the RMS amplitude of the (i)th output of a 1/4-tone filterbank \, pt~ determines the pitch by taking the global maximum of the expression: amp[i] * coef[0] + amp[i + 24] * coef[1] + amp[i + 38] * coef[2] + amp[i + 48] * coef[3] + amp[i + 56] * coef[4] + amp[i + 62] * coef[5] + amp[i + 67] * coef[6] + amp[i + 72] * coef[7]. amp-range: the turnoff and turnon amplitudes. A note won't be detected unless a raw pitch is found and the turnon amplitude is exceeded \; a raw pitch won't even be reported unless the turnoff amplitude is exceeded. Thus \, if the RMS ever goes below the turnoff amplitude and then increases to exceed the turnon one \, a new note will be output. quality-range: the same for "quality". The quality is: (power[i] + power[i + 24] + ... + power[i + 72]) / (total-signal-power-up-to-(i+72)) pitch-range: the lowest and highest MIDI pitch you expect. It's just as well to drop the bottom pitch 2 half-tones or so and filter them out afterward \, since certain kinds of noise seem to come out as the lowest note of the range.;#P comment 6 139 327 196617 gliss-time: a stability criterion. A pitch will not be reported unless the rate-of-change of the pitch is less than one half-step in (gliss-time) milliseconds. debounce-time: prevents the pitch tracker from outputting the same pitch twice in (debounce-time) milliseconds. Useful for some situations in which it is known that fast repeated notes won't come up \, but in which the instrument has a tendency to double-attack a note. reattack (multiple) (time): If the signal peaks \, drops \, and then its power jumps up by a factor of (multiple) in (time) milliseconds \, a new note is reported.;#P comment 6 19 327 196617 What are all those pt~ parameters? (by the way \, use "print" to see them all) reference-pitch: the MIDI pitch to take as A69 (i.e. \, 69.5 if the instrument is 1/4 sharp) stretch: the size of a half-tone interval ("2" means that a whole-tone change is to be reported as a half-tone. This is essential for the flute which has a stretch of 1.01 or so.) stick: I don't know if this is useful or not: if nonzero \, a new pitch must have "quality" at least (1+stick) as good as the previous one before the tracker will switch to it. This was to keep multiphonics and such from coming out too wildly.;#P pop;#P newobj 221 388 168 196617 patcher A_word_from_M_Puckette;#P connect 29 0 28 1;#P connect 34 0 23 0;#P connect 30 0 38 0;#P connect 17 0 32 0;#P connect 33 0 34 0;#P connect 33 1 34 1;#P connect 32 0 31 0;#P connect 28 0 16 0;#P connect 36 0 19 0;#P connect 28 0 16 1;#P connect 22 0 27 0;#P connect 23 0 25 1;#P connect 25 0 27 0;#P connect 27 0 37 0;#P connect 31 0 24 1;#P connect 27 1 26 0;#P connect 21 0 20 0;#P connect 18 0 27 0;#P connect 26 0 28 0;#P connect 5 0 24 0;#P connect 38 0 29 0;#P connect 35 0 36 0;#P connect 20 0 22 0;#P connect 3 0 16 0;#P connect 19 0 23 1;#P connect 2 0 5 0;#P connect 24 0 25 0;#P pop;