/*myNotes.js by Michael Zbyszynski, 071220Written by Michael Zbyszynski, The Center for New Music and Audio Technologies,University of California, Berkeley.  Copyright (c) 2007, The Regents of the University of California (Regents).  Permission to use, copy, modify, distribute, and distribute modified versionsof this software and its documentation without fee and without a signedlicensing agreement, is hereby granted, provided that the above copyrightnotice, this paragraph and the following two paragraphs appear in all copies,modifications, and distributions.IN NO EVENT SHALL REGENTS BE LIABLE TO ANY PARTY FOR DIRECT, INDIRECT,SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES, INCLUDING LOST PROFITS, ARISINGOUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF REGENTS HASBEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.REGENTS SPECIFICALLY DISCLAIMS ANY WARRANTIES, INCLUDING, BUT NOT LIMITED TO,THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULARPURPOSE. THE SOFTWARE AND ACCOMPANYING DOCUMENTATION, IF ANY, PROVIDEDHEREUNDER IS PROVIDED "AS IS". REGENTS HAS NO OBLIGATION TO PROVIDEMAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@NAME: myNotesDESCRIPTION: Checks to see if you have a "notes" file, and either makes it or an instructions objectAUTHORS: Michael ZbyszynskiCOPYRIGHT_YEARS: 2007SVN_REVISION: $LastChangedRevision: 618 $VERSION 0.1: First Release@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*/function myNotes(s){	var f = new File(s);	if (f.isopen) {		newdefault(s);		f.close();	} else {		newdefault("take_notes.pat");		//post("could not open file: " + s + "\n");		//post("See /mmjdepot/baseline/notes/ReadMe.pat" + "\n");		//post("for instructions on making this file." + "\n");	}}function newdefault(){	var i;	var a = new Array();	var vbox;	var vx=10;	var vy=10;		//post("opened file: " + arguments[0] + "\n");	if (vbox)		this.patcher.remove(vbox);		a[0] = vx + this.patcher.box.rect[0];	a[1] = vy + this.patcher.box.rect[1];		for (i=0;i<arguments.length;i++)		a[i+2] = arguments[i];		vbox = this.patcher.newdefault(a);}