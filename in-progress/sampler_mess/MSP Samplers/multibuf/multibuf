max v2;#N vpatcher 444 44 906 760;#P origin 0 -9;#P window setfont "Sans Serif" 9.;#N vpatcher 50 40 415 386;#P window setfont "Sans Serif" 9.;#P comment 39 180 307 196617 IN NO EVENT SHALL REGENTS BE LIABLE TO ANY PARTY FOR DIRECT \, INDIRECT \, SPECIAL \, INCIDENTAL \, OR CONSEQUENTIAL DAMAGES \, INCLUDING LOST PROFITS \, ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION \, EVEN IF REGENTS HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.;#P comment 39 244 307 196617 REGENTS SPECIFICALLY DISCLAIMS ANY WARRANTIES \, INCLUDING \, BUT NOT LIMITED TO \, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE AND ACCOMPANYING DOCUMENTATION \, IF ANY \, PROVIDED HEREUNDER IS PROVIDED "AS IS." REGENTS HAS NO OBLIGATION TO PROVIDE MAINTENANCE \, SUPPORT \, UPDATES \, ENHANCEMENTS \, OR MODIFICATIONS.;#P comment 6 151 340 196617 Written by Matt Wright \, The Center for New Music and Audio Technologies \, University of California \, Berkeley.;#P comment 5 26 341 196617 Copyright (c) 1998. The Regents of the University of California (Regents). All Rights Reserved.;#P comment 6 53 340 196617 Permission to use \, copy \, modify \, and distribute this software and its documentation for educational \, research \, and not-for-profit purposes \, without fee and without a signed licensing agreement \, is hereby granted \, provided that the above copyright notice \, this paragraph and the following two paragraphs appear in all copies \, modifications \, and distributions. Contact The Office of Technology Licensing \, UC Berkeley \, 2150 Shattuck Avenue \, Suite 510 \, Berkeley \, CA 94720-1620 \, (510) 643-7201 \, for commercial licensing opportunities.;#P pop;#P newobj 287 132 59 196617 p copyright;#P newex 92 134 99 196617 print to-thispatcher;#P newex 54 79 65 196617 route symbol;#N coll $0-multibuf1-buffers 1;#T flags 1 0;#P newobj 54 58 169 196617 coll $0-multibuf1-buffers 1;#N comlet output of #0-multibuf1-buffers collection;#P outlet 54 110 15 0;#N comlet message to multibuf1 collection;#P inlet 54 21 15 0;#N comlet 0/1 \, verbose mode off/on;#P inlet 90 21 15 0;#N comlet List of files read from folder;#P outlet 89 110 15 0;#P objectname buff_rep;#N thispatcher;#Q end;#P newobj 19 134 59 196617 thispatcher;#N comlet OSC: /coll \, /clear \, /file \, /folder \, /multicoll \, /samplor;#P inlet 19 21 15 0;#N vpatcher 24 59 1029 772;#P window setfont "Sans Serif" 9.;#P newex 33 454 215 196617 sprintf script connect buffer-%d 1 buff_rep 0;#P message 153 230 14 196617 3;#P newex 119 262 27 196617 + 0;#P message 119 230 14 196617 1;#N coll loadmessages;#T flags 1 0;#T 1 import;#T 2 import 0 -1 1;#T 3 replace;#T 4 replace 0 -1 1;#P newobj 119 289 89 196617 coll loadmessages;#P newex 207 203 45 196617 loadbang;#N vpatcher 161 232 680 617;#P window setfont "Sans Serif" 9.;#P message 282 126 218 196617 Using samplor~-style naming starting from \$1;#P message 270 142 129 196617 Samplor~-style naming off;#P newex 270 160 70 196617 print multibuf;#P message 269 300 31 196617 clear;#P newex 275 206 28 196617 t s s;#P comment 121 154 115 196617 Mode 2: samplor~-style;#P newex 112 270 85 196617 sprintf sample%d;#P newex 303 299 90 196617 pack store 1 name;#P newex 175 299 90 196617 pack store name 1;#N coll samplor-bufs-bynumber;#P newobj 303 323 135 196617 coll samplor-bufs-bynumber;#N coll samplor-bufs-byname;#P newobj 175 323 125 196617 coll samplor-bufs-byname;#P newex 235 78 27 196617 t 2 i;#N counter;#X flags 0 0;#P newobj 143 203 66 196617 counter;#P newex 108 174 40 196617 t b b s;#P newex 83 98 45 196617 loadbang;#P message 83 133 14 196617 1;#N comlet buffer~ name;#P outlet 83 319 15 0;#P newex 83 153 35 196617 gate 2;#P newex 194 55 51 196617 select off;#N comlet Sound file name;#P inlet 108 55 15 0;#N comlet Samplor mode?;#P inlet 194 26 15 0;#P comment 9 136 72 196617 Mode 1: Buffer's name is same as the sound file name.;#P connect 3 0 6 0;#P connect 7 0 6 0;#P connect 10 0 4 0;#P connect 6 0 4 0;#P connect 15 0 5 0;#P connect 4 0 5 0;#P connect 2 0 4 1;#P connect 4 1 8 0;#P connect 9 0 15 0;#P connect 8 1 9 0;#P connect 10 1 9 2;#P fasten 8 0 13 0 113 249;#P connect 18 0 11 0;#P connect 13 0 11 0;#P connect 1 0 3 0;#P connect 17 0 13 1;#P connect 3 1 10 0;#P connect 9 0 13 2;#P connect 3 0 20 0;#P connect 20 0 19 0;#P connect 21 0 19 0;#P fasten 8 2 17 0 143 194 280 194;#P connect 10 1 21 0;#P fasten 8 0 14 0 113 248;#P connect 18 0 12 0;#P connect 14 0 12 0;#P connect 9 0 14 1;#P connect 17 1 14 2;#P pop;#P newobj 340 345 72 196617 p buffer-name;#P newex 119 181 60 196617 route types;#P newex 119 203 78 196617 route MP3 AIFF;#P message 736 370 14 196617 1;#P newex 736 336 45 196617 loadbang;#P newex 80 381 68 196617 pack s s s s s;#P newex 80 336 159 196617 sprintf script send buffer-%d %s;#N vpatcher 629 115 1185 632;#P window setfont "Sans Serif" 9.;#P newex 158 402 65 196617 route symbol;#P newex 184 427 45 196617 unpack s;#P newex 254 337 244 196617 sprintf loading collections from multicollection %s...;#P comment 209 285 183 196617 Dump the collection \, treating the first symbol on each line as a /coll message.;#P newex 212 229 100 196617 sprintf store %s %s;#P newex 197 205 40 196617 t s s s;#P newex 0 176 193 196617 sprintf multicollection %s already loaded;#P newex 0 196 85 196617 print ¥multibuf1:;#P newex 224 47 40 196617 t s s b;#P message 198 146 14 196617 1;#P message 170 146 14 196617 0;#P newex 152 125 28 196617 t s b;#P newex 197 179 27 196617 gate;#N comlet Bang when multibuffer is cleared;#P inlet 110 53 15 0;#P message 110 74 31 196617 clear;#N coll ;#P newobj 152 100 53 196617 coll;#P newex 184 448 68 196617 prepend /coll;#P message 253 365 95 196617 ...collections loaded;#P newex 278 386 75 196617 print multibuf1;#P newex 197 314 53 196617 t b b s s;#P newex 173 359 70 196617 prepend refer;#N coll mouth.coll;#P newobj 158 382 53 196617 coll;#P message 140 360 31 196617 dump;#N comlet OSC messages;#P outlet 184 469 15 0;#N comlet Coll name;#P inlet 224 26 15 0;#P comment 40 99 109 196617 All the multicollections that have been loaded into this object.;#P comment 227 164 80 196617 Test whether this collection is already loaded;#P comment 251 446 147 196617 Not "sprintf /coll %s" because of symbols with spaces in them;#P connect 16 0 21 0;#P connect 21 0 20 0;#P connect 14 0 13 0;#P connect 8 1 5 0;#P fasten 23 0 12 0 217 251 322 251 322 82 157 82;#P connect 19 1 12 0;#P connect 13 0 12 0;#P connect 12 0 16 0;#P connect 7 0 6 0;#P connect 5 0 6 0;#P connect 6 0 27 0;#P connect 16 1 17 0;#P connect 8 2 7 0;#P connect 27 0 26 0;#P connect 27 1 26 0;#P connect 26 0 11 0;#P connect 11 0 4 0;#P connect 18 0 15 0;#P connect 17 0 15 0;#P connect 15 0 22 0;#P connect 22 0 8 0;#P connect 19 2 18 0;#P connect 22 1 23 0;#P connect 19 0 15 1;#P connect 3 0 19 0;#P connect 8 0 10 0;#P connect 8 3 25 0;#P connect 25 0 9 0;#P connect 10 0 9 0;#P connect 22 2 23 1;#P pop;#P newobj 561 106 55 196617 p multicoll;#P outlet 452 549 15 0;#P newex 452 419 133 196617 sprintf store buffer-%d %s;#P message 510 441 31 196617 clear;#P newex 704 472 71 196617 print multibuf;#N comlet OSC: /coll \, /clear \, /file;#P inlet 704 48 15 0;#P newex 704 439 101 196617 sprintf reading %s...;#P newex 704 414 27 196617 gate;#P newex 223 417 131 196617 pack s s s s i i i i s s;#N comlet List of files read from folder;#P outlet 538 193 15 0;#N vpatcher 30 70 748 724;#P origin 0 5;#P newex 268 496 28 16187401 t s s;#N comlet OSC messages;#P outlet 351 597 15 0;#P window setfont "Sans Serif" 9.;#P message 138 470 55 196617 types MP3;#P newex 79 366 215 196617 sprintf loading MP3 samples from folder %s...;#P newex 117 311 53 196617 t b s b s;#N comlet List of files read from folder;#P outlet 165 597 15 0;#P newex 258 450 71 196617 prepend types;#P newex 214 425 54 196617 unpack s s;#P newex 202 468 31 196617 t b s;#P newex 223 548 65 196617 route append;#P message 268 476 55 196617 types AIFF;#P newex 223 528 35 196617 folder;#P newex 203 229 45 196617 unpack s;#P newex 297 366 215 196617 sprintf loading AIFF samples from folder %s...;#P newex 203 256 100 196617 sprintf store %s %s;#P newex 175 201 53 196617 t b s s s;#P newex 6 181 154 196617 sprintf folder %s already loaded;#P newex 6 201 104 196617 print error:multibuf:;#P newex 202 43 40 196617 t s s b;#P message 176 142 14 196617 1;#P message 148 142 14 196617 0;#P newex 130 121 28 196617 t s b;#P newex 175 175 27 196617 gate;#N comlet Bang when multibuffer is cleared;#P inlet 88 49 15 0;#P message 88 70 31 196617 clear;#N coll ;#P newobj 130 96 53 196617 coll;#P newex 223 577 65 196617 prepend /file;#P message 296 394 84 196617 ...samples loaded;#P newex 321 415 75 196617 print multibuf:;#P newex 175 310 53 196617 t b s b s;#N comlet OSC messages;#P outlet 223 597 15 0;#N comlet Coll name;#P inlet 202 22 15 0;#P comment 25 94 100 196617 All the folders that have been loaded into this object.;#P comment 205 160 80 196617 Test whether this folder is already loaded;#P comment 326 472 118 196617 Default "types" \, if only one argument \, is AIFF;#P comment 191 284 183 196617 Turn each file (of the correct type(s)) in the folder into a /file message.;#P connect 14 0 19 0;#P connect 19 0 18 0;#P connect 31 3 32 0;#P connect 12 0 11 0;#P connect 20 1 31 0;#P fasten 21 0 10 0 208 275 344 275 344 78 135 78;#P connect 17 1 10 0;#P connect 11 0 10 0;#P connect 10 0 14 0;#P connect 31 2 33 0;#P connect 14 1 15 0;#P fasten 20 0 30 0 51 346 44 460;#P connect 16 0 13 0;#P connect 15 0 13 0;#P connect 13 0 20 0;#P connect 20 2 6 0;#P connect 17 2 16 0;#P connect 17 0 13 1;#P connect 4 0 17 0;#P connect 28 0 27 0;#P connect 20 3 23 0;#P connect 23 0 21 0;#P connect 6 1 28 0;#P connect 31 1 28 0;#P connect 27 1 24 0;#P connect 29 0 24 0;#P connect 35 0 24 0;#P connect 24 0 26 0;#P connect 26 0 9 0;#P connect 9 0 5 0;#P connect 28 1 29 0;#P connect 6 2 25 0;#P connect 25 0 35 0;#P connect 33 0 35 0;#P connect 23 0 21 1;#P connect 6 0 8 0;#P connect 31 0 8 0;#P connect 6 3 22 0;#P connect 32 0 7 0;#P connect 22 0 7 0;#P connect 8 0 7 0;#P connect 35 1 34 0;#P pop;#P newobj 510 106 43 196617 p folder;#P newex 466 283 27 196617 + 7;#N comlet OSC: /coll \, /clear \, /file;#P inlet 421 43 15 0;#P newex 714 175 178 196617 print multibuf:Unrecognized_message;#N vpatcher 72 123 604 634;#P window setfont "Sans Serif" 9.;#P newex 158 402 65 196617 route symbol;#P newex 184 427 45 196617 unpack s;#P newex 254 337 209 196617 sprintf loading samples from collection %s...;#P comment 209 285 183 196617 Dump the collection \, treating the first symbol on each line as a /file message.;#P newex 212 229 100 196617 sprintf store %s %s;#P newex 197 205 40 196617 t s s s;#P newex 6 169 170 196617 sprintf collection %s already loaded;#P newex 6 189 75 196617 print multibuf:;#P newex 224 47 40 196617 t s s b;#P message 198 146 14 196617 1;#P message 170 146 14 196617 0;#P newex 152 125 28 196617 t s b;#P newex 197 179 27 196617 gate;#N comlet Bang when multibuffer is cleared;#P inlet 110 53 15 0;#P message 110 74 31 196617 clear;#N coll ;#P newobj 152 100 53 196617 coll;#P newex 184 448 65 196617 prepend /file;#P message 253 365 84 196617 ...samples loaded;#P newex 278 386 75 196617 print multibuf:;#P newex 197 314 53 196617 t b b s s;#P newex 173 359 70 196617 prepend refer;#N coll mouth.coll;#P newobj 158 382 53 196617 coll;#P message 140 360 31 196617 dump;#N comlet OSC messages;#P outlet 184 469 15 0;#N comlet Coll name;#P inlet 224 26 15 0;#P comment 47 98 100 196617 All the collections that have been loaded into this object.;#P comment 227 164 80 196617 Test whether this collection is already loaded;#P comment 251 446 147 196617 Not "sprintf /file %s" because of symbols with spaces in them;#P connect 16 0 21 0;#P connect 21 0 20 0;#P connect 14 0 13 0;#P connect 8 1 5 0;#P connect 13 0 12 0;#P connect 19 1 12 0;#P fasten 23 0 12 0 217 251 322 251 322 82 157 82;#P connect 12 0 16 0;#P connect 5 0 6 0;#P connect 7 0 6 0;#P connect 6 0 27 0;#P connect 16 1 17 0;#P connect 8 2 7 0;#P connect 27 1 26 0;#P connect 27 0 26 0;#P connect 26 0 11 0;#P connect 11 0 4 0;#P connect 17 0 15 0;#P connect 18 0 15 0;#P connect 15 0 22 0;#P connect 22 0 8 0;#P connect 19 2 18 0;#P connect 22 1 23 0;#P connect 19 0 15 1;#P connect 3 0 19 0;#P connect 8 0 10 0;#P connect 8 3 25 0;#P connect 25 0 9 0;#P connect 10 0 9 0;#P connect 22 2 23 1;#P pop;#P newobj 475 106 32 196617 p coll;#P newex 466 303 30 196617 * 20;#P newex 410 254 66 196617 t i i i i i;#P newex 296 191 66 196617 t b s s s s;#P message 573 256 14 196617 0;#P newex 468 183 53 196617 b 4;#P newex 573 299 145 196617 sprintf script delete buffer-%i;#P message 468 211 14 196617 1;#P newex 543 278 40 196617 Uzi 0;#P newex 427 79 298 196617 OSC-route /file /clear /coll /folder /multicoll /samplor /mono;#P number 487 254 35 9 0 0 0 3 0 0 0 221 221 221 222 222 222 0 0 0;#N counter 1 10000;#X flags 0 0;#P newobj 432 230 84 196617 counter 1 10000;#N comlet For thispatcher;#P outlet 223 507 15 0;#P newex 223 370 301 196617 sprintf script new buffer-%d newex 20 %d 400 196617 buffer~;#P comment 221 389 285 196617 We can't use %s as the last two arguments to sprintf because then filenames with spaces in them will do the wrong thing.;#P connect 12 1 41 0;#P connect 12 0 29 0;#P connect 29 0 30 0;#P fasten 18 2 34 0 547 145 124 145;#P connect 34 0 33 0;#P connect 33 0 38 0;#P connect 38 0 39 0;#P fasten 40 0 39 0 158 251 124 251;#P connect 39 0 37 0;#P fasten 5 6 39 1 678 159 273 159 273 258 141 258;#P connect 11 1 30 4;#P connect 33 1 40 0;#P fasten 36 0 40 0 212 227 158 227;#P connect 12 2 1 0;#P connect 1 0 20 0;#P connect 41 0 2 0;#P connect 8 0 2 0;#P connect 30 0 2 0;#P connect 20 0 2 0;#P connect 37 0 29 1;#P connect 5 0 11 0;#P connect 11 2 35 0;#P connect 35 0 20 9;#P fasten 5 5 35 1 637 244 744 279 744 310 722 326 407 326;#P connect 3 0 12 0;#P fasten 28 0 5 0 566 125 688 125 688 74 432 74;#P connect 16 0 5 0;#P fasten 14 0 5 0 480 131 699 131 699 64 432 64;#P fasten 18 1 5 0 531 128 693 128 693 69 432 69;#P fasten 11 0 3 0 301 218 437 218;#P connect 12 3 26 0;#P connect 25 0 27 0;#P connect 26 0 27 0;#P connect 12 4 17 0;#P connect 17 0 13 0;#P connect 5 1 9 0;#P connect 9 0 7 0;#P connect 7 0 3 2;#P connect 5 1 14 0;#P connect 3 0 4 0;#P connect 5 2 14 1;#P connect 5 1 18 0;#P connect 9 3 25 0;#P connect 13 0 1 1;#P connect 18 0 19 0;#P connect 5 3 18 1;#P connect 9 2 6 0;#P connect 5 1 28 0;#P connect 9 1 10 0;#P connect 3 0 6 1;#P connect 10 0 6 1;#P connect 6 2 8 0;#P fasten 11 3 26 1 383 312 464 393;#P connect 5 4 28 1;#P connect 32 0 21 0;#P connect 23 0 21 0;#P connect 21 0 22 0;#P connect 22 0 24 0;#P connect 5 7 15 0;#P fasten 11 4 21 1 392 306 484 390;#P connect 31 0 32 0;#P pop;#P newobj 19 38 81 196617 p guts;#P comment 232 59 89 196617 open me and see...;#P comment 231 94 194 196617 Version 1.4 (031030): Made all prints say "multibuf" and added loadbang so default is to send "replace" to a buffer.;#P connect 3 0 2 0;#P connect 2 0 4 0;#P connect 7 0 9 0;#P connect 2 1 9 0;#P connect 9 0 10 0;#P connect 10 0 8 0;#P connect 10 1 8 0;#P connect 2 2 5 0;#P connect 6 0 2 1;#P fasten 2 0 11 0 24 129 97 129;#P pop;